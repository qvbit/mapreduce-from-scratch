syntax = "proto3";

package masterworker;

service MapReduceWorker {
    rpc WorkerFn(WorkerRequest) returns (WorkerReply) {}
}

message ShardComp {
    string filename=1;
    uint32 start = 2;
    uint32 end = 3;
    uint64 component_size = 4;
}

message WorkerRequest {
    string user_id = 1; // User id as in config.ini
    uint32 shard_id = 2;  // Shard id as calculated in file_shard.h
    repeated ShardComp component = 3; // List of shard components within this file shard.
    uint32 n_output_files = 4; // As defined in config.ini
    string tmp_loc = 5; // Path for intermediate files.
    bool job_type = 6;  // 0: Map, 1: Reduce
    uint64 shard_size = 7; // Size of full file shard (should be sum of components)
    string output_loc = 8; // Where to save files after job.
}

message WorkerReply {
    repeated string intermediate_files = 1;
    bool complete = 2;
}




